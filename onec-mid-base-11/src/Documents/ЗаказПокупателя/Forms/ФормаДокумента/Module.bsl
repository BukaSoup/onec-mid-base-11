
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Добавление ГруппыСкидка		
	Если Элементы.Найти("ГруппаСкидка") = Неопределено Тогда
		ГруппаСкидка = Элементы.Вставить("ГруппаСкидка", Тип("ГруппаФормы"),ЭтотОбъект, Элементы.Страницы);
		ГруппаСкидка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		
		
		// Добавление ПоляСкидка
		Если Элементы.Найти("Д_СогласованнаяСкидка") = Неопределено Тогда
			СогласованнаяСкидка = Элементы.Вставить("Д_СогласованнаяСкидка",Тип("ПолеФормы"), Элементы.ГруппаСкидка, );
			СогласованнаяСкидка.Вид = ВидПоляФормы.ПолеВвода;
			СогласованнаяСкидка.ПутьКДанным = "Объект.Д_СогласованнаяСкидка";
			СогласованнаяСкидка.УстановитьДействие("ПриИзменении", "СогласованнаяСкидкаПриИзменении");  
			
			// Добавление Команды пересчитать
			Если Элементы.Найти("Пересчитать") = Неопределено Тогда
				КомандаПересчета = Команды.Добавить("ДействиеПересчитать");
				КомандаПересчета.Заголовок = "Пересчитать";
				КомандаПересчета.Действие = "ДействиеПересчитать";
				
				КнопкаКоманды = Элементы.Вставить("ДействиеПересчитать", Тип("КнопкаФормы"),Элементы.ГруппаСкидка );
				КнопкаКоманды.ИмяКоманды = "ДействиеПересчитать";
				КнопкаКоманды.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	// КонецДобавление ГруппыСкидка ПоляСкидка Команды пересчитать
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары


&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДействиеПересчитать(Команда)  
	// Добавление действия команды пересчитать 
	ПересчитатьСумму();
	// КонецДобавление действия команды пересчитать
КонецПроцедуры

&НаКлиенте
Процедура СогласованнаяСкидкаПриИзменении(Элемент)   
	// Добалвение действия при изменении к реквизиту СогласованнаяСкидка 
	ЗадатьВопрос();	 
	// КонецДобалвение действия при изменении к реквизиту СогласованнаяСкидка  
КонецПроцедуры 



&НаКлиенте
Асинх Процедура ЗадатьВопрос()
	//Добавление Вопроса и действия после ответа
	
	Если ЗначениеЗаполнено(Объект.Товары) Или ЗначениеЗаполнено(Объект.Услуги) Тогда 
		Ответ = Ждать ВопросАсинх("Пересчитать сумму?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ПересчитатьСумму()
		КонецЕсли;
	КонецЕсли;
	//КонецДобавление Вопроса и действия после ответа    
	
КонецПроцедуры


&НаКлиенте
Процедура ПересчитатьСумму()
	//Добавление пересчета строк таблиц 	
	Для Каждого Строка Из Объект.Товары Цикл
		
		РассчитатьСуммуСтроки(Строка); 
		
	КонецЦикла;
	Для Каждого Строка Из Объект.Услуги Цикл
		
		РассчитатьСуммуСтроки(Строка); 
		
	КонецЦикла;
	//КонецДобавление пересчета строк таблиц
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//Доработка изначального кода: 
	//-КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//-ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки; 
	
	//ДобавлениеРеквизита формы СогласованнаяСкидка и реазизация механизма контроля скидок
	КоэффициентСкидки = 1 - (ТекущиеДанные.Скидка + Объект.Д_СогласованнаяСкидка) / 100;	
	Если КоэффициентСкидки < 0 Тогда
		Сообщение = Новый СообщениеПользователю();  
		Сообщение.Текст =(СтрШаблон("На %1 cкидка больше 100", ТекущиеДанные.Номенклатура));
		Сообщение.Сообщить();
		ТекущиеДанные.Сумма = 0;
	Иначе
		ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	КонецЕсли;
	//КонецДобавлениеРеквизита формы 
	
	//Оставлено из прошлого релиза
	РассчитатьСуммуДокумента();
	//	

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
